<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="PasswordResetEmail" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>templates\fr\passwordresetemail.htm;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="SupportQuery" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>templates\fr\supportquery.htm;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="WelcomeEmail" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>templates\fr\welcomeemail.htm;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="Keywords" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>text\fr\keywords.txt;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="AmountDonatedLabel" xml:space="preserve">
    <value>Montant Donné</value>
  </data>
  <data name="AmountToDonateLabel" xml:space="preserve">
    <value>Vous voulez donner:</value>
  </data>
  <data name="ChangeAmount" xml:space="preserve">
    <value>Changer le Montant</value>
  </data>
  <data name="CompanyBlurbFooter" xml:space="preserve">
    <value>NineStar has been created to share knowledge about the ancient wisdom of nine star ki astrology to help people gain a better understanding of themselves and of their loved ones, as well as the many cycles that affect their lives.</value>
  </data>
  <data name="CompanyDescription" xml:space="preserve">
    <value>Nine star ki is an ancient system of astrology, largely uknown in the west, but slowly regaining popularity. It is deeper and more extensive than the zodiac and can offer some quite astonishing insights into our nature and the many cyles that influence our lives.</value>
  </data>
  <data name="CompanyLegalDescription" xml:space="preserve">
    <value />
  </data>
  <data name="CompanyShortDescription" xml:space="preserve">
    <value>Website created to share knowledge about the ancient widsom of nine star ki astrology.</value>
  </data>
  <data name="CurrencyLabel" xml:space="preserve">
    <value>Devise</value>
  </data>
  <data name="CustomerEmailLabel" xml:space="preserve">
    <value>Adresse Email du Client</value>
  </data>
  <data name="CustomerLabel" xml:space="preserve">
    <value>Client</value>
  </data>
  <data name="Donate" xml:space="preserve">
    <value>Faire Un Don</value>
  </data>
  <data name="DonatedOnLabel" xml:space="preserve">
    <value>Donné Le</value>
  </data>
  <data name="Donation" xml:space="preserve">
    <value>Don</value>
  </data>
  <data name="DonationAmountLabel" xml:space="preserve">
    <value>Combien voulez-vous donner ?</value>
  </data>
  <data name="DonationBlurb" xml:space="preserve">
    <value>Votre don à NineStar nous aidera considérablement à continuer de vous pourvoir ce service. Nous sommes très reconnaissants de votre soutien.</value>
  </data>
  <data name="Donations" xml:space="preserve">
    <value>Dons</value>
  </data>
  <data name="DonationSuccessful" xml:space="preserve">
    <value>Nous avons bien reçu votre don. Merci !</value>
  </data>
  <data name="DonationSuccessfulTitle" xml:space="preserve">
    <value>Réception de Don</value>
  </data>
  <data name="DonationTo" xml:space="preserve">
    <value>Don à</value>
  </data>
  <data name="DonationToNineStar" xml:space="preserve">
    <value>Don A NineStar</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Chargement...</value>
  </data>
  <data name="MainTitleLeft" xml:space="preserve">
    <value>Nine</value>
  </data>
  <data name="MainTitleRight" xml:space="preserve">
    <value>Star</value>
  </data>
  <data name="MakeDonation" xml:space="preserve">
    <value>Faire un Don</value>
  </data>
  <data name="OnTheBrinkOfExtinctionTitle" xml:space="preserve">
    <value>Au Bord De L'Extinction</value>
  </data>
  <data name="Projects" xml:space="preserve">
    <value>Projets</value>
  </data>
  <data name="Shop" xml:space="preserve">
    <value>Boutique</value>
  </data>
  <data name="DonationReceivedEmail" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>templates\fr\donationreceivedemail.htm;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="Calculate" xml:space="preserve">
    <value>Calculer</value>
  </data>
  <data name="CalculateYourNineStarKi" xml:space="preserve">
    <value>Calculer Votre Energie du Qi des Neuf Etoiles</value>
  </data>
  <data name="DateOfBirthLabel" xml:space="preserve">
    <value>Date de Naissance</value>
  </data>
  <data name="Female" xml:space="preserve">
    <value>Femme</value>
  </data>
  <data name="GenderLabel" xml:space="preserve">
    <value>Homme ou Femme</value>
  </data>
  <data name="Hermaphrodite" xml:space="preserve">
    <value>Hermaphrodite</value>
  </data>
  <data name="Male" xml:space="preserve">
    <value>Homme</value>
  </data>
  <data name="nine_star_intro" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>articles\fr\nine-star-intro.htm;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="nine_star_ki_title" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>text\fr\nine-star-ki-title.txt;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="Other" xml:space="preserve">
    <value>Autre</value>
  </data>
  <data name="TransFemale" xml:space="preserve">
    <value>Femme Trans</value>
  </data>
  <data name="TransMale" xml:space="preserve">
    <value>Homme Trans</value>
  </data>
</root>