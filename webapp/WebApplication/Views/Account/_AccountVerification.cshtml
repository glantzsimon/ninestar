@model K9.WebApplication.Models.AccountActivationModel

@{
    var returnUrl = TempData["ReturnUrl"] ?? "";
}

<div class="otp-container">
    @using (Html.BeginForm("VerifySixDigitCode", "Account"))
    {
        using (Html.BeginBootstrapForm())
        {
            @Html.HiddenFor(model => model.UserId)

            <div class="row">
                <div class="col-sm-offset-3 col-sm-6">
                    <div class="verification-container">
                        <h4>@Dictionary.EnterVerificationCode</h4>

                        <div class="code-input-container">
                            <input id="@nameof(Model.Digit1)" name="@nameof(Model.Digit1)" type="text" maxlength="1" class="otp-input">
                            <input id="@nameof(Model.Digit2)" name="@nameof(Model.Digit2)" type="text" maxlength="1" class="otp-input">
                            <input id="@nameof(Model.Digit3)" name="@nameof(Model.Digit3)" type="text" maxlength="1" class="otp-input">
                            <input id="@nameof(Model.Digit4)" name="@nameof(Model.Digit4)" type="text" maxlength="1" class="otp-input">
                            <input id="@nameof(Model.Digit5)" name="@nameof(Model.Digit5)" type="text" maxlength="1" class="otp-input">
                            <input id="@nameof(Model.Digit6)" name="@nameof(Model.Digit6)" type="text" maxlength="1" class="otp-input">
                        </div>

                        <hr />
                        @Html.BootstrapButton(Dictionary.Verify, EButtonType.Submit, "", EButtonClass.Large)

                        <p>
                            @Dictionary.DidntReceiveCodePrompt <a href="@Url.Action("AccountCreated", new { Model.UniqueIdentifier, returnUrl, resendCode = 1})" class="">@Dictionary.Resend</a>
                        </p>
                    </div>
                </div>
            </div>
        }
    }
</div>

<script>
    const inputs = document.querySelectorAll(".otp-input");

    inputs.forEach((input, index) => {
        input.addEventListener("input", (e) => {
            if (e.target.value && index < inputs.length - 1) {
                inputs[index + 1].focus();
            }
        });

        input.addEventListener("keydown", (e) => {
            if (e.key === "Backspace" && !input.value && index > 0) {
                inputs[index - 1].focus();
            }
        });
    });

    $(function() {
        document.addEventListener("paste", function (event) {
            let pastedCode = event.clipboardData.getData("text");
            if (pastedCode.length === 6) {
                $("#@nameof(Model.Digit1)").val(pastedCode[0]);
                $("#@nameof(Model.Digit2)").val(pastedCode[1]);
                $("#@nameof(Model.Digit3)").val(pastedCode[2]);
                $("#@nameof(Model.Digit4)").val(pastedCode[3]);
                $("#@nameof(Model.Digit5)").val(pastedCode[4]);
                $("#@nameof(Model.Digit6)").val(pastedCode[5]);
            }
        });
    })
</script>

