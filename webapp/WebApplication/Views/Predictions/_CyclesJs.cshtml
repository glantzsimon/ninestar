@using K9.WebApplication.Enums
@model K9.WebApplication.Models.NineStarKiModel

<script language="javascript">

    function scrollCurrentYearIntoVew() {
        setTimeout(function() {
                var $cycle = $("div.current-year");
                var $yearlyPlannerContainer = ".yearly-planner-container";

                $($yearlyPlannerContainer).scrollTop($cycle.offset().top - $($yearlyPlannerContainer).offset().top);
            },
            200);
    }

    function scrollCurrentMonthIntoVew() {
        setTimeout(function() {
                var $cycle = $("div.current-month");
                var $monthlyPlannerContainer = ".monthly-planner-container";

                $($monthlyPlannerContainer).scrollTop($cycle.offset().top - $($monthlyPlannerContainer).offset().top);
            },
            200);
    }

    function scrollActivePlannerItemIntoVew() {
        if ($("#PlannerEnableScrollIntoView").val() === 'True') {
            setTimeout(function() {
                    var $cycle = $(".year-block .active");
                    var $container = $(".global-planner-container");

                    $container.scrollTop($cycle.offset().top - $container.offset().top - 154);

                    $("#PlannerEnableScrollIntoView").val(false);
                },
                200);
        }
    }

    function scrollCyclesIntoVew(tab) {
        setTimeout(function() {
                $.fn.scrollToTopOf(tab, -230);
            },
            200);
    }

    function bindGlobalPlannerEvents() {
        let clickTimeout;

        $("#View").change(function() {
            var view = $(this).val();
            var selectedDate = $("#SelectedDateTimeString").val();

            $.fn.displaySpinner("#global-planner-container");

            // Update planner
            updateGlobalPlanner(view, selectedDate);
        });

        $("a.planner-zoom-out").click(function() {
            clearTimeout(clickTimeout);

            var view = $(this).attr("data-view");
            var selectedDate = $("#SelectedDateTimeString").val();

            $.fn.displaySpinner("#global-planner-container");

            // Update planner
            updateGlobalPlanner(view, selectedDate);
        });

        // Drill up or down
        $(".global-planner-item").dblclick(function() {
            clearTimeout(clickTimeout);

            var $el = $(this);
            var view = $el.attr("data-view");
            var selectedDate = $el.attr("data-selected-date");

            $.fn.displaySpinner("#global-planner-container");

            // Update planner
            updateGlobalPlanner(view, selectedDate);
        });

        $(".global-planner-item").click(function() {
            var $el = $(this);
            var energy = $el.attr("data-energy");
            var type = $el.attr("data-type");
            var url = $el.attr("data-update-url");
            var $container, $parentBlock, $childBlock, $details, url;

            $container = $el.closest(".global-planner-container");
            $parentBlock = $el.closest(".parent-block");
            $childBlock = $el.find(".child-block");
            $details = $("#global-planner-details");

            // clear current class from all items
            $container.find(".parent-block, .child-block").removeClass("active");

            // set current class on current selected item
            if (type === "parent") {
                $parentBlock.addClass("active");
            }
            else if (type === "child") {
                $childBlock.addClass("active");
            }

            clickTimeout = setTimeout(function() {
                // Display selected child / parent data
                ajaxcontroller().get(url, {energy}).done(
                    function(result) {
                        if (result.success) {
                            $details.find(".panel .panel-heading h4 strong").html(result.data.CycleDescriptiveName);
                            $details.find(".panel .panel-body").html(result.data.CycleDescription);
                        }
                    });

                setTimeout(function () {
                    if (!$.fn.isVisible($details))
                        $.fn.scrollToTopOf($details, -180);
                }, 200);

            }, 200);
        });
    }

    function updateGlobalPlanner(view, selectedDate) {
        var url = '@Url.Action("GetPlanner")';

        ajaxcontroller().getHtml(url,
            {
                dateOfBirth: '@Model.PersonModel.DateOfBirth.ToString("yyyy-MM-dd")',
                birthTimeZoneId: "@Model.PersonModel.BirthTimeZoneId",
                timeOfBirth: '@Model.PersonModel.TimeOfBirth.ToString()',
                gender: '@Model.PersonModel.Gender',
                selectedDateTime: selectedDate,
                displayDataForPeriod: '@Model.DisplayDataForPeriod',
                userTimeZoneId: '@Model.UserTimeZoneId',
                calculationMethod: '@Model.CalculationMethod.ToString()',
                useHolograhpicCycleCalculation: '@Model.UseHolograhpicCycleCalculation.ToString().ToLower()',
                invertDailyAndHourlyKiForSouthernHemisphere: '@Model.InvertDailyAndHourlyKiForSouthernHemisphere.ToString().ToLower()',
                invertDailyAndHourlyCycleKiForSouthernHemisphere: '@Model.InvertDailyAndHourlyCycleKiForSouthernHemisphere.ToString().ToLower()',
                view: view,
            }).done(
            function(result) {
                if (result.success) {
                    $("#global-planner-container").html(result.data);

                    bindGlobalPlannerEvents();
                    bootstrapControls().init();
                    var view = $("#PlannerView").val();
                    $("#View").val(view).selectpicker("refresh");

                    if (view.toString() === '@((int)EPlannerView.Day)') {
                        renderDailyPlannerView();
                    }
                }
            });
    }

    function renderDailyPlannerView() {
        var slots = [
            { startTime: '01:15', endTime: '03:15', title: 'Meeting 1' },
            { startTime: '04:30', endTime: '06:30', title: 'Meeting 2' },
            { startTime: '02:00', endTime: '04:00', title: 'Meeting 3' },
            { startTime: '05:00', endTime: '07:00', title: 'Meeting 4' },
            { startTime: '07:30', endTime: '09:00', title: 'Meeting 5' }
            // Add more slots as needed...
        ];

        // Convert a "HH:MM" string into total minutes.
        function getTimeInMinutes(time) {
            var parts = time.split(':');
            return parseInt(parts[0], 10) * 60 + parseInt(parts[1], 10);
        }

        function renderSlots() {
            var $container = $('#dayContainer');
            var totalSlots = 12; // 12 two-hour periods in a day
            var slotDuration = 120; // each slot is 120 minutes

            // Generate 12 time blocks
            for (var i = 0; i < totalSlots; i++) {
                var startTime = (i * 2) + ":00";
                var endTime = ((i + 1) * 2) + ":00";

                // Create a new time-slot container
                var $timeSlot = $('<div>')
                    .addClass('time-slot bg-light p-3 border-bottom')
                    .attr('data-time', startTime);

                // Add a label with the time range
                var $label = $('<span>').text(startTime + " - " + endTime);
                $timeSlot.append($label);

                // Loop over each slot item and place it in the correct time block.
                $.each(slots, function (index, slot) {
                    var slotStart = getTimeInMinutes(slot.startTime);
                    var slotEnd = getTimeInMinutes(slot.endTime);
                    var slotStartBlock = Math.floor(slotStart / slotDuration);
                    var slotEndBlock = Math.floor(slotEnd / slotDuration);

                    // Check if the slot overlaps with the current block.
                    if (slotStartBlock === i || slotEndBlock === i || (slotStartBlock < i && slotEndBlock > i)) {
                        var $slotItem = $('<div>')
                            .addClass('slot-item position-absolute text-white d-flex align-items-center justify-content-center')
                            .text(slot.title);

                        // Add a class based on slot duration.
                        var slotDurationMinutes = slotEnd - slotStart;
                        if (slotDurationMinutes <= 30) {
                            $slotItem.addClass('short'); // Short slot
                        } else if (slotDurationMinutes >= 90) {
                            $slotItem.addClass('long');  // Long slot
                        }
                        $timeSlot.append($slotItem);
                    }
                });

                $container.append($timeSlot);
            }
        }

        // Render the slots.
        renderSlots();
    }


    $(function() {
        $("a[href='#yearly-planner']").click(function() {
            scrollCurrentYearIntoVew();
        });

        $("a[href='#monthly-planner']").click(function() {
            scrollCurrentMonthIntoVew();
        });

        $("#current-yearly-cycle").click(function() {
            scrollCyclesIntoVew("#yearly");

            $(".nav-pills a[href='#predictions']").tab("show");
            $(".nav-pills a[href='#yearly']").tab("show");
        });

        $("#current-monthly-cycle").click(function() {
            scrollCyclesIntoVew("#monthly");

            $(".nav-pills a[href='#predictions']").tab("show");
            $(".nav-pills a[href='#monthly']").tab("show");
        });

        bindGlobalPlannerEvents();
    });

</script>