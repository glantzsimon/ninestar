@using K9.SharedLibrary.Extensions
@using K9.WebApplication.Config
@model K9.WebApplication.Models.NineStarKiModel

<div class="container main-content clear-both daily-planner-container padding-top-10">
    <div class="calendar-grid">
        <!-- Day headers -->
        <div class="calendar-header">@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetDayName(DayOfWeek.Monday)</div>
        <div class="calendar-header">@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetDayName(DayOfWeek.Tuesday)</div>
        <div class="calendar-header">@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetDayName(DayOfWeek.Wednesday)</div>
        <div class="calendar-header">@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetDayName(DayOfWeek.Thursday)</div>
        <div class="calendar-header">@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetDayName(DayOfWeek.Friday)</div>
        <div class="calendar-header">@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetDayName(DayOfWeek.Saturday)</div>
        <div class="calendar-header">@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetDayName(DayOfWeek.Sunday)</div>

        @{
            bool isFirst = true;
            var daysOfWeek = new Dictionary<string, int> {
                { "Monday", 0 }, { "Tuesday", 1 }, { "Wednesday", 2 },
                { "Thursday", 3 }, { "Friday", 4 }, { "Saturday", 5 }, { "Sunday", 6 }
            };
        }

        @foreach (var cycle in Model.GetDailyPlanner())
        {
            var year = cycle.Item1;
            var month = cycle.Item2;
            var day = cycle.Item3;
            var monthName = cycle.Item4;
            var dayName = cycle.Item5;
            var energy = cycle.Item6;
            var secondEnergy = cycle.Item7;
            var date = new DateTime(year, month, day);
            var displayDate = $"{dayName} {monthName} {@day}";

            var selectedClass = date == Model.SelectedDate.Value.Date ? "selected" : "";

            // Add padding for first row
            if (isFirst)
            {
                int offset = ((int)date.DayOfWeek + 6) % 7;
                for (int i = 0; i < offset; i++)
                {
                    <div class="empty-cell"></div>
                }
                isFirst = false;
            }

            <div class="calendar-day @selectedClass">
                <div class="date-label">@displayDate</div>
                <div class="custom-content">
                    @if (secondEnergy == null)
                    {
                        <img loading="lazy" title="@energy.EnergyName" alt="@Dictionary.NineStarKiAstrologyFreeCalculator @energy.EnergyName" class="auto-size center-block" src="@DefaultValuesConfiguration.Instance.BaseImagesPath/ninestar/energies/@(energy.Energy.ToString().ToLower()).png" />
                    }
                    else
                    {
                        <div class="double-energy-container">
                            <img loading="lazy" title="@energy.EnergyName" alt="@Dictionary.NineStarKiAstrologyFreeCalculator @energy.EnergyName" class="auto-size center-block" src="@DefaultValuesConfiguration.Instance.BaseImagesPath/ninestar/energies/@(energy.Energy.ToString().ToLower()).png" />
                            <span> - </span>
                            <img loading="lazy" title="@secondEnergy.EnergyName" alt="@Dictionary.NineStarKiAstrologyFreeCalculator @secondEnergy.EnergyName" class="auto-size center-block" src="@DefaultValuesConfiguration.Instance.BaseImagesPath/ninestar/energies/@(secondEnergy.Energy.ToString().ToLower()).png" />
                        </div>
                    }

                </div>
            </div>
        }
    </div>
</div>
