@using K9.Base.WebApplication.Extensions
@using K9.SharedLibrary.Extensions
@using K9.WebApplication.Enums
@using K9.WebApplication.Extensions
@using K9.WebApplication.Helpers
@using K9.WebApplication.ViewModels
@using SessionConstants = K9.WebApplication.Constants.SessionConstants
@model K9.WebApplication.Models.NineStarKiModel

@{
    var membership = this.GetActiveUserMembership();
    var isUnlimited = membership != null && membership.IsUnlimited() || Model.IsComplementary || K9.WebApplication.Helpers.SessionHelper.CurrentUserIsAdmin();
    var displayPreference = K9.WebApplication.Helpers.SessionHelper.GetEnergyDefaultDisplay();
    var showDirectionsStyle = displayPreference == (int)EEnergyDisplay.MagicSquare && K9.WebApplication.Helpers.SessionHelper.GetShowDirections() ? "" :
    "display: none;";
    var directionsChartData = Model.GetDrectionsChartViewModel().GetDirectionsChartData();
}

@if (isUnlimited)
{
    <div class="directions-more-info" style="@showDirectionsStyle">
        <h4><strong>@Dictionary.WorstDirectionsToTravelIn</strong></h4>
        <div class="table-responsive">
            @if (this.GetDeviceType() == EDeviceType.Desktop)
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>@Dictionary.Direction</th>
                            <th>@Dictionary.Score</th>
                            <th>@Dictionary.Guidance</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var score in directionsChartData)
                        {
                            <tr>
                                <td>@(string.Join(", ", score.Directions.Select(e => e.DirectionName)))</td>
                                <td>
                                    <div class="directions-summary">
                                        <!-- Acts as the relative container -->
                                        <div class="status-circle @score.CssClassName">
                                            @if (score.Score >= 10)
                                            {
                                                <i class="fa fa-exclamation-triangle"></i>
                                            }
                                        </div>
                                        <div class="directions-line-overlay">
                                            @foreach (var direction in score.Directions)
                                            {
                                                <div class="line to-@direction.DisplayDirection"></div>
                                            }
                                        </div>
                                    </div>
                                </td>
                                <td class="">@score.Guidance</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <table class="table directions-chart-table">
                    <tbody>
                        @foreach (var score in directionsChartData)
                        {
                            <tr>
                                <th>
                                    @(string.Join(", ", score.Directions.Select(e => e.DirectionName)))
                                </th>
                            </tr>
                            <tr>
                                <td>
                                    <div class="directions-summary">
                                        <!-- Acts as the relative container -->
                                        <div class="status-circle @score.CssClassName">
                                            @if (score.Score >= 10)
                                            {
                                                <i class="fa fa-exclamation-triangle"></i>
                                            }
                                        </div>
                                        <div class="directions-line-overlay">
                                            @foreach (var direction in score.Directions)
                                            {
                                                <div class="line to-@direction.DisplayDirection"></div>
                                            }
                                        </div>
                                    </div>
                                    <div class="guidance-text">
                                        @score.Guidance
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
}