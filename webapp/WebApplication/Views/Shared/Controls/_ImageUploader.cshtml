@using K9.WebApplication.Options
@model ImageUploadOptions

@{
    var uploadId = "imageUpload_" + Model.IdPrefix;
    var previewId = "imagePreviewContainer_" + Model.IdPrefix;
}

<div class="custom-uploader drop-zone" id="imageDropZone">
    <div id="@previewId" class="row margin-top-10"></div>

    <button type="button" class="btn btn-default btn-upload-trigger">
        <i class="glyphicon glyphicon-upload"></i> @Dictionary.UploadImages
    </button>

    <input type="file" id="@uploadId" class="hidden-file-input" accept="image/*" multiple />
</div>

<script>
    $(function () {
        const $dropZone = $('#imageDropZone');
        const $fileInput = $('#@uploadId');
        const $previewContainer = $('#@previewId');
        const $uploadBtn = $('.btn-upload-trigger');

        // 🔘 Open file dialog
        $uploadBtn.on('click', function () {
            $fileInput.trigger('click');
        });

        // 📦 Handle file input
        $fileInput.on('change', function () {
            handleFiles(this.files);
        });

        // 🧲 Drag handling
        $dropZone.on('dragover', function (e) {
            e.preventDefault();
            e.stopPropagation();
            $dropZone.addClass('drag-over');
        });

        $dropZone.on('dragleave drop', function (e) {
            e.preventDefault();
            e.stopPropagation();
            $dropZone.removeClass('drag-over');
        });

        // 📥 Drop files
        $dropZone.on('drop', function (e) {
            const files = e.originalEvent.dataTransfer.files;
            handleFiles(files);
        });

        // 🧠 Core upload logic
        function handleFiles(files) {
            if (!files || files.length === 0) return;

            $uploadBtn.prop('disabled', true);
            $.fn.displaySpinner($dropZone, true);

            let pending = files.length;

            Array.from(files).forEach(file => {
                const formData = new FormData();
                formData.append('file', file);

                $.ajax({
                    url: '@Model.UploadUrl',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,

                    success: function (res) {
                        console.log("Upload response:", res);

                        if (res && res.success && res.url) {
                            const $thumb = $(`
                            <div class="col-xs-6 col-sm-4 image-preview-container">
                                <img src="${res.url}" class="img-responsive img-thumbnail" style="width: 100%;" />
                                <input type="text" class="form-control input-sm" readonly value="${res.url}" />
                            </div>
                        `);

                            $previewContainer.append($thumb);

                            document.dispatchEvent(new CustomEvent('imageUploaded', {
                                detail: {
                                    url: res.url,
                                    filename: res.url.split('/').pop()
                                }
                            }));

                            $.fn.showToast('Image uploaded successfully.', 'success');
                        } else {
                            console.warn("Upload failed or missing URL:", res);
                            const msg = res?.message || 'Upload failed or returned no URL.';
                            $.fn.showToast("⚠️ " + msg, 'error');
                        }
                    },

                    error: function (xhr, status, err) {
                        console.error("AJAX upload error:", xhr.responseText || err);
                        $.fn.showToast('Upload failed. See console for details.', 'error');
                    },

                    complete: function () {
                        if (--pending === 0) {
                            $uploadBtn.prop('disabled', false);
                            $.fn.hideSpinner($dropZone);
                        }
                    }
                });
            });
        }
    });
</script>