@using K9.SharedLibrary.Extensions
@model K9.SharedLibrary.Models.FileSource
@{
	var displayStyle = Model.UploadedFiles.Any() ? string.Empty : "display: none;";
}

@Html.HiddenFor(model => model.UploadedFileCount, new { @class = "uploaded-filed-count"})

<div class="upload-file-preview container" style="@displayStyle">
	@if (Model.UploadedFiles != null)
	{
		for (int i = 0; i < Model.UploadedFiles.Count; i++)
		{
			var uploadedFile = Model.UploadedFiles[i];
			var imgClass = uploadedFile.IsImage() && uploadedFile.ImageInfo.IsPortrait() ? "portrait" : string.Empty;
			
			<div class="file-preview-container col-lg-3 col-md-4 col-sm-6 col-xs-12" data-file-index="@i">
				<div class="file-thumbnail-container">
					<div class="preview-thumbnail">
						<img src="@uploadedFile.Src" class="@imgClass">
					</div>
					<div class="image-info">
						<p>@uploadedFile.FileName</p>
						<samp>(@uploadedFile.FileInfo.GetFileSize())</samp>
						<button type="button" class="file-preview-delete btn btn-xs btn-default" title="@Dictionary.Delete" data-file-index="@i">
							<i class="glyphicon glyphicon-trash text-danger"></i>
						</button>
					</div>
				</div>
			</div>
		}
	}
</div>
@Html.LabelFor(model => model)
<div class="input-group">
	<label class="input-group-btn">
		<span class="btn btn-primary btn-file">
			@Dictionary.Browse&hellip; @Html.TextBoxFor(model => model.PostedFile, new { @class = "file-upload", type = "file", style = "display: none;", accept = Model.GetAcceptedFileExtensionsList(), multiple = "multiple" })
		</span>
	</label>
	<input type="text" class="form-control file-label" readonly />
</div>